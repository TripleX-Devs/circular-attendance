// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Subject {
  subjectId     String           @id @default(uuid())
  subjectName   String
  subjectCode   String           @unique
  totalClasses  Int
  userAttendance UserAttendance[]
  attendance     Attendance[]
}

model User {
  rollNumber   String @id
  group        String
  name         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  attendance   Attendance[]
  userAttendance UserAttendance[]
}

model UserAttendance {
  id              String  @id @default(uuid())
  rollNumber      String
  presentDays     Int     @default(0)
  absentDays      Int     @default(0)
  currentClasses  Int     @default(0)
  subject         Subject @relation(fields: [subjectId], references: [subjectId])
  subjectId       String
  user            User    @relation(fields: [rollNumber], references: [rollNumber])

  @@unique([rollNumber, subjectId])
}

model Attendance {
  id          String      @id @default(uuid())
  subjectId   String
  present     Boolean
  date        DateTime
  subject     Subject  @relation(fields: [subjectId], references: [subjectId])
  rollNumber  String
  user        User     @relation(fields: [rollNumber], references: [rollNumber])
}

model Circular {
  id          String   @id @default(uuid())
  title       String
  circularUrl String
  batch       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deleteAt    DateTime
}